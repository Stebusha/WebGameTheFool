@page "/register"

@inject NavigationManager NavigationManager
@inject DataManager DataManager

<div class="register-form">

    <EditForm Model="@registerModel" FormName="RegisterForm" @OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />

        <h3>Регистрация</h3>
        <div class="login">
            <p>Логин: <br />
                <InputText id="login" Placeholder="Логин" @bind-Value="registerModel.Login" />
                <ValidationMessage For="@(() => registerModel.Login)" />
            </p>
        </div>
        <div class="password">
            <p>Пароль:<br />
                <InputText id="password" type="password" Placeholder="Пароль" @bind-Value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </p>
        </div>
        <div class="confirm-password">
            <p>Подтверждение:<br />
                <InputText id="confirm-password" type="password" Placeholder="Подтвердите пароль"
                    @bind-Value="registerModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </p>
        </div>
        <button type="submit">Зарегистрироваться</button>

    </EditForm>
</div>


@code {
    [SupplyParameterFromForm(FormName = "RegisterForm")]
    private RegisterModel registerModel { get; set; } = new();
    private ApplicationUser? newUser;
    private async Task HandleRegister()
    {
        if (newUser is null)
        {
            newUser = new ApplicationUser
                {
                    Login = registerModel.Login,
                    IsLoggedIn = true,
                    Password = registerModel.Password,
                    LastEnteredTime = DateTime.Now
                };

            try
            {
                await DataManager.AddUserAsync(newUser);
                Console.WriteLine("IsRegistered");
            }
            catch (Exception e)
            {
                Console.WriteLine("Error line 54\n" + e.Message);
            }
        }
        
        @* NavigationManager.NavigateTo("/thefool"); *@
    }
}
