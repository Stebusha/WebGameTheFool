@page "/login"

@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication

<PageTitle>Вход</PageTitle>

@inject NavigationManager NavigationManager

<div class="login-form">

    <EditForm id="login-form" Model="@loginModel" OnValidSubmit="LoginUserAsync" FormName="@LOGIN_FORM">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3>Вход</h3>
        <div class="login">
            <p>
                Логин: <br />
                <InputText id="login" placeholder="Логин" @bind-Value="loginModel.Login" />
                <ValidationMessage For="@(() => loginModel.Login)" />
            </p>
        </div>
        <div class="password">
            <p>
                Пароль:<br />
                <InputText id="password" type="password" placeholder="Пароль" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </p>
        </div>
        <div class="remember-me">
            <InputCheckbox id="remeber-me" @bind-Value="loginModel.RememberMe" class="form-check-input" />
            Запомнить?
        </div>
        <button type="submit">Войти</button>
    </EditForm>
</div>


@code {

    private const string LOGIN_FORM = "login-form";

    [SupplyParameterFromForm(FormName = LOGIN_FORM)]
    private LoginModel loginModel { get; set; } = new("", "");

    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default!;
    private async Task LoginUserAsync()
    {
        await Task.Delay(2000);

        LoggedInUserModel user = new LoggedInUserModel(1, "admin");

        var claims = user.ToClaims();
        var identity = new ClaimsIdentity(claims, Constants.AUTH_SCHEME);
        var principal = new ClaimsPrincipal(identity);

        var authProperties = new AuthenticationProperties
            {
                IsPersistent = loginModel.RememberMe
            };

        Console.WriteLine($"Login: {loginModel.Login}\nPasssword: {loginModel.Password}");

        await HttpContext.SignInAsync(Constants.AUTH_SCHEME, principal, authProperties);

        if (loginModel.Login == "admin" && loginModel.Password == "admin")
            NavigationManager.NavigateTo("/thefool");
    }
}
